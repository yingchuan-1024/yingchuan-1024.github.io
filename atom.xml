<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>颍川</title>
  
  <subtitle>万事如意，顺风顺水</subtitle>
  <link href="http://yingchuan-1024.github.io/atom.xml" rel="self"/>
  
  <link href="http://yingchuan-1024.github.io/"/>
  <updated>2024-11-19T08:59:26.112Z</updated>
  <id>http://yingchuan-1024.github.io/</id>
  
  <author>
    <name>颍川</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何使用JavaScript来判断是否为移动设备</title>
    <link href="http://yingchuan-1024.github.io/2024/11/18/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8JavaScript%E6%9D%A5%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87/"/>
    <id>http://yingchuan-1024.github.io/2024/11/18/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8JavaScript%E6%9D%A5%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87/</id>
    <published>2024-11-18T03:59:03.000Z</published>
    <updated>2024-11-19T08:59:26.112Z</updated>
    
    <content type="html"><![CDATA[<p>由于移动设备的显示屏幕相对于桌面显示器来说小很多，在桌面显示器上能够正常显示的内容，到了移动设备中就不正常了。为了实现移动端和桌面端的相互跳转，我们可以通过JavaScript来判断当前的设备是否是移动设备，然后执行相应的代码。</p><p><strong>通过js来判断当前的设备</strong><br>下面的代码片段能够检测6种不同的移动设备：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) &#123;</span><br><span class="line"> // 执行相应代码或直接跳转到手机页面</span><br><span class="line">&#125; else &#123;</span><br><span class="line"> // 执行桌面端代码</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>上面的js代码可以判断当前设备是否是Android、iPhone或iPad等六种移动设备中的一种。如果你需要单独检测当前设备是否是某种指定的设备，例如是否是iPhone，可以使用下面的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if( iPhone.test(navigator.userAgent) ) &#123;</span><br><span class="line"> alert(&quot;这是iPhone设备&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line"> alert(&quot;不是iPhone设备&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>通过device.js来判断当前的设备</strong><br><a href="https://github.com/matthewhudson/device.js">device.js</a>是一个用于检查设备操作系统的js插件。使用它可以检测iOS, Android, Blackberry, Windows, Firefox OS, MeeGo, AppleTV等系统，还可以判断当前的设备是横向的还是纵向的。</p><p>device.js会在你的页面<html>元素中插入相应的class类，例如：<br><img src="http://img.htmleaf.com/1705/devicejs-iphone.png" alt="在iphone中使用device.js"><br><img src="http://img.htmleaf.com/1705/devicejs-android.png" alt="在Android平板中使用device.js"><br><img src="http://img.htmleaf.com/1705/devicejs-blackberry.png" alt="在蓝莓系统中使用device.js"></p><p>device.js支持的设备有：</p><ul><li>iOS: iPhone, iPod, iPad</li><li>Android: Phones &amp; Tablets</li><li>Blackberry: Phones &amp; Tablets</li><li>Windows: Phones &amp; Tablets</li><li>Firefox OS: Phones &amp; Tablets</li></ul><p>使用device.js插件的方法是在页面中引入device.js文件，在浏览器解析页面时，根据当前的设备，device.js就会在<html>元素中插入不同的class类。这些class类对应的设备如下表所示：</p><table><thead><tr><th>设备名称</th><th>设备名称</th></tr></thead><tbody><tr><td>iPad</td><td>ios ipad tablet</td></tr><tr><td>iPhone</td><td>ios iphone mobile</td></tr><tr><td>iPod</td><td>ios ipod mobile</td></tr><tr><td>Android Phone</td><td>android mobile</td></tr><tr><td>Android Tablet</td><td>android tablet</td></tr><tr><td>BlackBerry Phone</td><td>blackberry mobile</td></tr><tr><td>BlackBerry Tablet</td><td>blackberry tablet</td></tr><tr><td>Windows Phone</td><td>windows mobile</td></tr><tr><td>Windows Tablet</td><td>windows tablet</td></tr><tr><td>Firefox OS Phone</td><td>fxos mobile</td></tr><tr><td>Firefox OS Tablet</td><td>fxos tablet</td></tr><tr><td>MeeGo</td><td>meego</td></tr><tr><td>Desktop</td><td>desktop</td></tr><tr><td>Television</td><td>television</td></tr></tbody></table><p>根据当前设备屏幕是横向还是纵向的，device.js会在<html>元素中插入相应的class类。</p><table><thead><tr><th>设备方向</th><th>class类</th></tr></thead><tbody><tr><td>Landscape</td><td>landscape</td></tr><tr><td>Portrait</td><td>portrait</td></tr></tbody></table><p>另外，device.js还提供了一组用于判断设备的js方法，使用方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(device.mobile())&#123;</span><br><span class="line">    //执行移动设备的方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有可用的判断方法如下表所示：</p><table><thead><tr><th>设备名称</th><th>JavaScript 方法</th></tr></thead><tbody><tr><td>Mobile</td><td>device.mobile()</td></tr><tr><td>Tablet</td><td>device.tablet()</td></tr><tr><td>Desktop</td><td>device.desktop()</td></tr><tr><td>iOS</td><td>device.ios()</td></tr><tr><td>iPad</td><td>device.ipad()</td></tr><tr><td>iPhone</td><td>device.iphone()</td></tr><tr><td>iPod</td><td>device.ipod()</td></tr><tr><td>Android</td><td>device.android()</td></tr><tr><td>Android Phone</td><td>device.androidPhone()</td></tr><tr><td>Android Tablet</td><td>device.androidTablet()</td></tr><tr><td>BlackBerry</td><td>device.blackberry()</td></tr><tr><td>BlackBerry Phone</td><td>device.blackberryPhone()</td></tr><tr><td>BlackBerry Tablet</td><td>device.blackberryTablet()</td></tr><tr><td>Windows</td><td>device.windows()</td></tr><tr><td>Windows Phone</td><td>device.windowsPhone()</td></tr><tr><td>Windows Tablet</td><td>device.windowsTablet()</td></tr><tr><td>Firefox OS</td><td>device.fxos()</td></tr><tr><td>Firefox OS Phone</td><td>device.fxosPhone()</td></tr><tr><td>Firefox OS Tablet</td><td>device.fxosTablet()</td></tr><tr><td>MeeGo</td><td>device.meego()</td></tr><tr><td>Television</td><td>device.television()</td></tr></tbody></table><p>判断设备方向的js方法有：</p><table><thead><tr><th>设备方向</th><th>JavaScript方法</th></tr></thead><tbody><tr><td>Landscape</td><td>device.landscape()</td></tr><tr><td>Portrait</td><td>device.portrait()</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于移动设备的显示屏幕相对于桌面显示器来说小很多，在桌面显示器上能够正常显示的内容，到了移动设备中就不正常了。为了实现移动端和桌面端的相互跳转，我们可以通过JavaScript来判断当前的设备是否是移动设备，然后执行相应的代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过js来判断</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yingchuan-1024.github.io/2024/11/14/hello-world/"/>
    <id>http://yingchuan-1024.github.io/2024/11/14/hello-world/</id>
    <published>2024-11-14T01:11:37.398Z</published>
    <updated>2024-11-15T09:02:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
