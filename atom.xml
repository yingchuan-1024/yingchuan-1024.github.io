<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>颍川</title>
  
  <subtitle>万事如意，顺风顺水</subtitle>
  <link href="http://yingchuan-1024.github.io/atom.xml" rel="self"/>
  
  <link href="http://yingchuan-1024.github.io/"/>
  <updated>2024-12-12T02:16:29.028Z</updated>
  <id>http://yingchuan-1024.github.io/</id>
  
  <author>
    <name>颍川</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>以nodeJS-hexo-butterfly主题为例实现ani动态鼠标</title>
    <link href="http://yingchuan-1024.github.io/2024/11/18/%E4%BB%A5nodeJS-hexo-butterfly%E4%B8%BB%E9%A2%98%E4%B8%BA%E4%BE%8B%E5%AE%9E%E7%8E%B0ani%E5%8A%A8%E6%80%81%E9%BC%A0%E6%A0%87/"/>
    <id>http://yingchuan-1024.github.io/2024/11/18/%E4%BB%A5nodeJS-hexo-butterfly%E4%B8%BB%E9%A2%98%E4%B8%BA%E4%BE%8B%E5%AE%9E%E7%8E%B0ani%E5%8A%A8%E6%80%81%E9%BC%A0%E6%A0%87/</id>
    <published>2024-11-18T03:59:03.000Z</published>
    <updated>2024-12-12T02:16:29.028Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本篇文章是在实现up大大清蒸QB的ani-cursor-js时遇到的问题和在butterfly实现过程"><a href="#本篇文章是在实现up大大清蒸QB的ani-cursor-js时遇到的问题和在butterfly实现过程" class="headerlink" title="本篇文章是在实现up大大清蒸QB的ani-cursor.js时遇到的问题和在butterfly实现过程"></a>本篇文章是在实现up大大清蒸QB的ani-cursor.js时遇到的问题和在butterfly实现过程</h1><p>关于ani-cursor.js详细介绍请查看<strong>清蒸QB</strong><a href="https://blog.qpqpqpqpqp.com/post/10002">博客</a>、<a href="https://github.com/qingzhengQB/ani-cursor.js">GitHub</a>、<a href="https://blog.csdn.net/weixin_73200542/article/details/143169096?sharetype=blog&shareId=143169096&sharerefer=APP&sharesource=m0_66061828&sharefrom=link">CSDN</a>这里就不介绍了。当你完成在<strong>bash</strong>中安装命令<code>npm install ani-cursor.js</code>和在source&#x2F;js中新建一个文件（我的叫mouse.js）使用函数 <strong>setANICursor</strong> 之类来将你的 ani 用于配置ani地址和引用到的属性详细方法参考清蒸QB<a href="https://github.com/qingzhengQB/ani-cursor.js">GitHub</a>我的如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; setANICursor &#125; <span class="keyword">from</span> <span class="string">&quot;ani-cursor.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; setANICursorWithGroupElement &#125; <span class="keyword">from</span> <span class="string">&quot;ani-cursor.js&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为&lt;body&gt;设置动画鼠标指针</span></span><br><span class="line"><span class="title function_">setANICursor</span>(<span class="string">&quot;body&quot;</span>, <span class="string">&quot;/img/ani/XXX.ani&quot;</span>, <span class="string">&quot;auto&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为&lt;img&gt;设置动画鼠标指针</span></span><br><span class="line"><span class="title function_">setANICursor</span>(<span class="string">&quot;img&quot;</span>, <span class="string">&quot;/img/ani/XXX.ani&quot;</span>, <span class="string">&quot;auto&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为&lt;p&gt;设置动画鼠标指针</span></span><br><span class="line"><span class="keyword">let</span> textAbleGroup = [</span><br><span class="line">    <span class="string">&quot;input&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;input[type=&quot;text&quot;]&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;textarea&quot;</span>,</span><br><span class="line">    <span class="string">&quot;span&quot;</span>,</span><br><span class="line">    <span class="string">&quot;p&quot;</span>,</span><br><span class="line">    <span class="string">&quot;h1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;h2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;h3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;h4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;h5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;h6&quot;</span>,</span><br><span class="line">];</span><br><span class="line"><span class="title function_">setANICursorWithGroupElement</span>(textAbleGroup, <span class="string">&quot;/img/ani/XXX.ani&quot;</span>);</span><br></pre></td></tr></table></figure><p>xxx设置为自己的文件名，不会的<a href="https://blog.leonus.cn/2022/custom.html">参考Hexo 博客添加自定义 css 和 js 文件</a>后安装依赖</p><ol><li><p><strong>初始化项目（如果尚未初始化）</strong>:<br>打开终端，切换到你的 Hexo 项目根目录，并运行以下命令以初始化一个新的 npm 项目（如果还没有 package.json 文件的话）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure></li><li><p><strong>安装 Webpack 相关依赖</strong>:<br>安装 Webpack 核心库以及 Webpack CLI：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev webpack webpack-cli</span><br></pre></td></tr></table></figure></li><li><p><strong>安装 Babel 相关依赖</strong>:<br>Babel 用于将 ES6+ 代码转换为向后兼容的 JavaScript 版本，以下是必要的 Babel 插件和预设：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev @babel/core @babel/preset-env babel-loader</span><br></pre></td></tr></table></figure></li><li><p><strong>安装 <code>buffer</code> polyfill</strong></p><p>Webpack 5 不再自动包含 Node.js 核心模块的 polyfill（例如 <code>buffer</code>），所以你需要手动安装该 polyfill。</p><p>运行以下命令来安装 <code>buffer</code> 包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install buffer</span><br></pre></td></tr></table></figure></li><li><p><strong>配置 Babel</strong>:<br>在项目根目录下创建一个 <code>.babelrc</code> 文件或 <code>babel.config.js</code> 文件，并添加以下内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;presets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;@babel/preset-env&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>配置 Webpack</strong>:<br>在项目根目录下创建一个 <code>webpack.config.js</code> 文件，并添加以下配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./source/js/mouse.js&#x27;</span>,  <span class="comment">// 入口文件</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;bundle.js&#x27;</span>,  <span class="comment">// 打包后的文件名</span></span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;source/js&#x27;</span>),  <span class="comment">// 输出路径</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">fallback</span>: &#123;</span><br><span class="line">      <span class="string">&quot;buffer&quot;</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&quot;buffer/&quot;</span>)  <span class="comment">// 添加 polyfill</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,  <span class="comment">// 匹配所有的 JavaScript 文件</span></span><br><span class="line">        <span class="attr">exclude</span>: <span class="regexp">/node_modules\/(?!ani-cursor\.js\/|byte-data|endianness|ieee754-buffer|riff-file|utf8-buffer)/</span>,  <span class="comment">// 排除 node_modules 中的文件，但包括 ani-cursor.js</span></span><br><span class="line">        <span class="attr">use</span>: &#123;</span><br><span class="line">          <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,  <span class="comment">// 使用 Babel 转译代码</span></span><br><span class="line">          <span class="attr">options</span>: &#123;</span><br><span class="line">            <span class="attr">presets</span>: [<span class="string">&#x27;@babel/preset-env&#x27;</span>],  <span class="comment">// 转译成兼容的 JavaScript</span></span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">extensions</span>: [<span class="string">&#x27;.js&#x27;</span>],  <span class="comment">// 支持的文件扩展名</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;production&#x27;</span>,  <span class="comment">// 生产模式</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p><strong>安装 ani-cursor.js</strong>:<br>使用 npm 安装 ani-cursor.js：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install ani-cursor</span><br></pre></td></tr></table></figure></li><li><p><strong>修改 Hexo 主题布局文件</strong>:<br>在你的 Hexo 主题的**_config.butterfly.yml**布局文件中添加以下代码来引入打包后的 JavaScript 文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/bundle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>添加构建脚本</strong>:<br>   在 <code>package.json</code> 文件中添加一个构建脚本，以便于使用 Webpack 打包：</p>   <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack --config webpack.config.js&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>执行jsc生成</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx webpack --config webpack.config.js</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;本篇文章是在实现up大大清蒸QB的ani-cursor-js时遇到的问题和在butterfly实现过程&quot;&gt;&lt;a href=&quot;#本篇文章是在实现up大大清蒸QB的ani-cursor-js时遇到的问题和在butterfly实现过程&quot; class=&quot;headerlin</summary>
      
    
    
    
    
    <category term="butterfly" scheme="http://yingchuan-1024.github.io/tags/butterfly/"/>
    
  </entry>
  
  <entry>
    <title>如何使用JavaScript来判断是否为移动设备</title>
    <link href="http://yingchuan-1024.github.io/2024/11/18/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8JavaScript%E6%9D%A5%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87/"/>
    <id>http://yingchuan-1024.github.io/2024/11/18/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8JavaScript%E6%9D%A5%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87/</id>
    <published>2024-11-18T03:59:03.000Z</published>
    <updated>2024-12-12T02:18:20.213Z</updated>
    
    <content type="html"><![CDATA[<p>由于移动设备的显示屏幕相对于桌面显示器来说小很多，在桌面显示器上能够正常显示的内容，到了移动设备中就不正常了。为了实现移动端和桌面端的相互跳转，我们可以通过JavaScript来判断当前的设备是否是移动设备，然后执行相应的代码。</p><p><strong>通过js来判断当前的设备</strong><br>下面的代码片段能够检测6种不同的移动设备：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="regexp">/Android|webOS|iPhone|iPad|iPod|BlackBerry/i</span>.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>) ) &#123;</span><br><span class="line"> <span class="comment">// 执行相应代码或直接跳转到手机页面</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"> <span class="comment">// 执行桌面端代码</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>上面的js代码可以判断当前设备是否是Android、iPhone或iPad等六种移动设备中的一种。如果你需要单独检测当前设备是否是某种指定的设备，例如是否是iPhone，可以使用下面的代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( iPhone.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>) ) &#123;</span><br><span class="line"> <span class="title function_">alert</span>(<span class="string">&quot;这是iPhone设备&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"> <span class="title function_">alert</span>(<span class="string">&quot;不是iPhone设备&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>通过device.js来判断当前的设备</strong><br><a href="https://github.com/matthewhudson/device.js">device.js</a>是一个用于检查设备操作系统的js插件。使用它可以检测iOS, Android, Blackberry, Windows, Firefox OS, MeeGo, AppleTV等系统，还可以判断当前的设备是横向的还是纵向的。</p><p>device.js会在你的页面<html>元素中插入相应的class类，例如：<br><img src="http://img.htmleaf.com/1705/devicejs-iphone.png" alt="在iphone中使用device.js"><br><img src="http://img.htmleaf.com/1705/devicejs-android.png" alt="在Android平板中使用device.js"><br><img src="http://img.htmleaf.com/1705/devicejs-blackberry.png" alt="在蓝莓系统中使用device.js"></p><p>device.js支持的设备有：</p><ul><li>iOS: iPhone, iPod, iPad</li><li>Android: Phones &amp; Tablets</li><li>Blackberry: Phones &amp; Tablets</li><li>Windows: Phones &amp; Tablets</li><li>Firefox OS: Phones &amp; Tablets</li></ul><p>使用device.js插件的方法是在页面中引入device.js文件，在浏览器解析页面时，根据当前的设备，device.js就会在<html>元素中插入不同的class类。这些class类对应的设备如下表所示：</p><table><thead><tr><th>设备名称</th><th>设备名称</th></tr></thead><tbody><tr><td>iPad</td><td>ios ipad tablet</td></tr><tr><td>iPhone</td><td>ios iphone mobile</td></tr><tr><td>iPod</td><td>ios ipod mobile</td></tr><tr><td>Android Phone</td><td>android mobile</td></tr><tr><td>Android Tablet</td><td>android tablet</td></tr><tr><td>BlackBerry Phone</td><td>blackberry mobile</td></tr><tr><td>BlackBerry Tablet</td><td>blackberry tablet</td></tr><tr><td>Windows Phone</td><td>windows mobile</td></tr><tr><td>Windows Tablet</td><td>windows tablet</td></tr><tr><td>Firefox OS Phone</td><td>fxos mobile</td></tr><tr><td>Firefox OS Tablet</td><td>fxos tablet</td></tr><tr><td>MeeGo</td><td>meego</td></tr><tr><td>Desktop</td><td>desktop</td></tr><tr><td>Television</td><td>television</td></tr></tbody></table><p>根据当前设备屏幕是横向还是纵向的，device.js会在<html>元素中插入相应的class类。</p><table><thead><tr><th>设备方向</th><th>class类</th></tr></thead><tbody><tr><td>Landscape</td><td>landscape</td></tr><tr><td>Portrait</td><td>portrait</td></tr></tbody></table><p>另外，device.js还提供了一组用于判断设备的js方法，使用方法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(device.<span class="title function_">mobile</span>())&#123;</span><br><span class="line">    <span class="comment">//执行移动设备的方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有可用的判断方法如下表所示：</p><table><thead><tr><th>设备名称</th><th>JavaScript 方法</th></tr></thead><tbody><tr><td>Mobile</td><td>device.mobile()</td></tr><tr><td>Tablet</td><td>device.tablet()</td></tr><tr><td>Desktop</td><td>device.desktop()</td></tr><tr><td>iOS</td><td>device.ios()</td></tr><tr><td>iPad</td><td>device.ipad()</td></tr><tr><td>iPhone</td><td>device.iphone()</td></tr><tr><td>iPod</td><td>device.ipod()</td></tr><tr><td>Android</td><td>device.android()</td></tr><tr><td>Android Phone</td><td>device.androidPhone()</td></tr><tr><td>Android Tablet</td><td>device.androidTablet()</td></tr><tr><td>BlackBerry</td><td>device.blackberry()</td></tr><tr><td>BlackBerry Phone</td><td>device.blackberryPhone()</td></tr><tr><td>BlackBerry Tablet</td><td>device.blackberryTablet()</td></tr><tr><td>Windows</td><td>device.windows()</td></tr><tr><td>Windows Phone</td><td>device.windowsPhone()</td></tr><tr><td>Windows Tablet</td><td>device.windowsTablet()</td></tr><tr><td>Firefox OS</td><td>device.fxos()</td></tr><tr><td>Firefox OS Phone</td><td>device.fxosPhone()</td></tr><tr><td>Firefox OS Tablet</td><td>device.fxosTablet()</td></tr><tr><td>MeeGo</td><td>device.meego()</td></tr><tr><td>Television</td><td>device.television()</td></tr></tbody></table><p>判断设备方向的js方法有：</p><table><thead><tr><th>设备方向</th><th>JavaScript方法</th></tr></thead><tbody><tr><td>Landscape</td><td>device.landscape()</td></tr><tr><td>Portrait</td><td>device.portrait()</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于移动设备的显示屏幕相对于桌面显示器来说小很多，在桌面显示器上能够正常显示的内容，到了移动设备中就不正常了。为了实现移动端和桌面端的相互跳转，我们可以通过JavaScript来判断当前的设备是否是移动设备，然后执行相应的代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过js来判断</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="http://yingchuan-1024.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yingchuan-1024.github.io/2024/11/14/hello-world/"/>
    <id>http://yingchuan-1024.github.io/2024/11/14/hello-world/</id>
    <published>2024-11-14T01:11:37.398Z</published>
    <updated>2024-11-15T09:02:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
